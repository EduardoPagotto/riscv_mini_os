{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		// open file with double click only
		//"workbench.editor.enablePreview": false,
		//"workbench.list.openMode": "doubleClick",
		"workbench.colorCustomizations": {
			"editorCursor.foreground": "#ffff00",
			"editorCursor.background": "#ff0000",
			"terminalCursor.foreground": "#ffff00",
			"terminalCursor.background": "#ff0000"
		},
		// Remove editor distractions
		"editor.cursorBlinking": "blink",
		"editor.cursorSmoothCaretAnimation": "on",
		"editor.cursorStyle": "line",
		"editor.hover.enabled": false, // hover manual crt+k, crt+i
		"editor.occurrencesHighlight": "off", // off disable highligh
		"editor.selectionHighlight": false, // True show similar selectec
		"editor.suggestOnTriggerCharacters": false,
		"editor.acceptSuggestionOnEnter": "smart",
		"editor.acceptSuggestionOnCommitCharacter": false,
		"editor.bracketPairColorization.enabled": true,
		"editor.guides.bracketPairs": true,
		"editor.quickSuggestions": {
			"other": "off",
			"comments": "off",
			"strings": "off"
		},
		"editor.inlineSuggest.enabled": false,
		"editor.suggest.preview": false,
		"editor.snippetSuggestions": "none",
		"editor.wordBasedSuggestions": "off",
		"editor.minimap.enabled": false,
		// Font settings
		"editor.fontFamily": "JetBrains Mono",
		"editor.fontSize": 15,
		"editor.fontWeight": "normal",
		"editor.fontLigatures": true,
		"editor.letterSpacing": 0.8,
		"editor.lineHeight": 1.5,
		// misc
		"editor.rulers": [
			120
		],
		"editor.formatOnSave": true,
		"editor.tabSize": 4,
		"editor.smoothScrolling": true,
		// Terminal
		"terminal.integrated.letterSpacing": 0.8,
		"terminal.integrated.fontWeight": "normal",
		"terminal.integrated.defaultProfile.windows": "Command Prompt",
		"terminal.integrated.fontFamily": "JetBrains Mono",
		"terminal.integrated.fontLigatures.enabled": true,
		"terminal.integrated.lineHeight": 1.0,
		"terminal.integrated.fontSize": 15,
		"terminal.integrated.cursorStyle": "line",
		"terminal.integrated.cursorBlinking": true,
		"terminal.integrated.cursorStyleInactive": "block",
		// Explorer
		"explorer.compactFolders": false,
		"explorer.confirmDragAndDrop": true,
		"explorer.confirmDelete": true,
		"explorer.copyRelativePathSeparator": "/",
		// Files
		"files.autoSave": "onFocusChange",
		"files.insertFinalNewline": true,
		"files.trimFinalNewlines": true,
		"files.trimTrailingWhitespace": true,
		// Git
		"git.enableSmartCommit": true,
		"git.autofetch": true,
		"git.confirmSync": true,
		"git.openRepositoryInParentFolders": "always",
		// Error lens
		"errorLens.enabled": true,
		"errorLens.delay": 1000,
		"errorLens.delayMode": "new",
		"errorLens.enabledDiagnosticLevels": [
			"error",
			"warning"
		],
		"errorLens.problemRangeDecorationEnabled": true,
		"errorLens.gutterIconsEnabled": true,
		"errorLens.followCursor": "activeLine",
		"errorLens.gutterIconsFollowCursorOverride": true,
		"errorLens.decorations": {
			"errorRange": {
				"border": "1px dashed red",
				"backgroundColor": "#ff000090",
				"color": "#ffffff"
			},
			"warningRange": {
				"border": "2px dotted #fa9121"
			},
			"infoRange": {
				"textDecoration": ";background:linear-gradient(45deg,#ff8400,#00d9ff);background-clip:text;color:transparent;border-bottom:2px solid #00d9ff",
				"backgroundColor": "#fff0"
			},
			"hintRange": {
				"textDecoration": ";box-shadow:0 0 5px 3px #2faf6470;border-radius:0.25em"
			}
		},
		// LLDB
		"lldb.showDisassembly": "auto",
		"lldb.dereferencePointers": true,
		"lldb.consoleMode": "commands",
		//"lldb-dap.executable-path": "/usr/bin/lldb-dap",
		// CPP
		"C_Cpp.intelliSenseCachePath": "${workspaceFolder}/build/vscode_cache",
		//"C_Cpp.default.browse.path": [],
		//"C_Cpp.loggingLevel": "Debug",
		//"C_Cpp.intelliSenseEngineFallback": "enabled",
		"C_Cpp.configurationWarnings": "enabled",
		"C_Cpp.intelliSenseEngine": "Tag Parser",
		"C_Cpp.clang_format_path": "/usr/bin/clang-format",
		// CMAKE
		"cmake.configureOnOpen": true,
		"cmake.options.statusBarVisibility": "visible",
		"cmake.useCMakePresets": "never",
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"type": "cmake",
				"label": "CMake: configure",
				"command": "configure",
				"targets": [
					"all"
				],
				"problemMatcher": [],
				"detail": "CMake template configure task"
			},
			{
				"type": "cmake",
				"label": "CMake: build",
				"command": "build",
				"targets": [
					"all"
				],
				"group": "build",
				"problemMatcher": [],
				"detail": "CMake template build task",
				"dependsOn": [
					"CMake: configure"
				]
			},
			{
				"label": "Run QEMU",
				"type": "shell",
				"command": "echo 'QEMU Started'; qemu-system-riscv32 -nographic -serial mon:stdio -machine virt -s -S -bios ${workspaceFolder}/bin/app1.elf",
				"detail": "Dispara QEMU com VM para RISCV32",
				// "dependsOn":["Build"],
				"isBackground": true,
				// "args": [],
				"problemMatcher": [
					{
						"pattern": [
							{
								"regexp": ".",
								"file": 1,
								"location": 2,
								"message": 3
							}
						],
						"background": {
							"activeOnStart": true,
							"beginsPattern": ".",
							"endsPattern": "QEMU Started",
						}
					}
				],
				"presentation": {
					"reveal": "always"
				},
				"group": "build"
			}
		]
	},
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "Local Debug Server",
				"type": "lldb-dap",
				"request": "attach",
				"program": "${workspaceFolder}/bin/kernel.elf",
				"gdb-remote-port": 1234,
				"preLaunchTask": "Run QEMU"
			},
			{
				"name": "Debug APP1-GDB",
				"type": "cppdbg",
				"request": "launch",
				"program": "${workspaceRoot}/bin/app1.elf",
				"cwd": "${workspaceFolder}",
				"miDebuggerPath": "/usr/bin/gdb",
				"miDebuggerServerAddress": "localhost:1234",
				"stopAtEntry": true,
				//"preLaunchTask": "Run QEMU"
			},
			{
				"name": "Debug APP1-LLDB",
				"type": "lldb-dap",
				"request": "attach",
				"program": "${workspaceRoot}/bin/app1.elf",
				"waitFor": true,
				"gdb-remote-hostname": "localhost",
				"gdb-remote-port": 1234
			}
			//,
			// {
			// 	"type": "venus",
			// 	"request": "launch",
			// 	"name": "Venus Debug Current File",
			// 	"program": "${file}",
			// 	"stopOnEntry": true,
			// 	"openViews": []
			// },
		],
		"compounds": []
	}
}
